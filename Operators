Operators in Python are special symbols or keywords that perform operations on variables and values. They are the building blocks of Python programming and are categorized based on the kind of operation they perform. 


1. Arithmetic Operators
Used to perform mathematical operations.

Operator	Description	Example
-----------------------------
+	Addition	5 + 3 = 8
-	Subtraction	5 - 3 = 2
*	Multiplication	5 * 3 = 15
/	Division	5 / 3 = 1.67
%	Modulus (Remainder)	5 % 3 = 2
**	Exponentiation (Power)	5 ** 3 = 125
//	Floor Division	5 // 3 = 1


2. Comparison Operators
Used to compare two values. The result is either True or False.

Operator	Description	Example
------------------------------
==	Equal to	5 == 3 → False
!=	Not equal to	5 != 3 → True
>	Greater than	5 > 3 → True
<	Less than	5 < 3 → False
>=	Greater than or equal to	5 >= 3 → True
<=	Less than or equal to	5 <= 3 → False


3. Logical Operators
Used to combine conditional statements.

Operator	Description	Example
------------------------------
and	Logical AND	True and False → False
or	Logical OR	True or False → True
not	Logical NOT (negation)	not True → False


4. Assignment Operators
Used to assign values to variables.

Operator	Description	Example
---------------------------------
=	Assign	x = 5
+=	Add and assign	x += 3 → x = x + 3
-=	Subtract and assign	x -= 3 → x = x - 3
*=	Multiply and assign	x *= 3 → x = x * 3
/=	Divide and assign	x /= 3 → x = x / 3
%=	Modulus and assign	x %= 3 → x = x % 3
**=	Exponent and assign	x **= 3 → x = x ** 3
//=	Floor divide and assign	x //= 3 → x = x // 3


6. Membership Operators
Used to test membership in sequences (like lists, tuples, strings).

Operator	Description	Example
------------------------------
in : Returns True if value is present	'a' in 'apple' → True
not in	: Returns True if value is absent	'z' in 'apple' → False


7. Identity Operators
Used to compare objects, not just values.

Operator	Description	Example
is	: Returns True if both are same	x is y
is not : 	Returns True if both are different	x is not y


8. Special Operators
Ternary Operator: A one-liner for conditional expressions.

x = 5
result = "Even" if x % 2 == 0 else "Odd"
print(result)  # Output: Odd


Examples in Action
# Arithmetic
a = 10
b = 3
print(a + b)  # 13

# Comparison
print(a > b)  # True

# Logical
print(a > b and b > 0)  # True

# Membership
lst = [1, 2, 3]
print(2 in lst)  # True

# Identity
x = [1, 2, 3]
y = x
z = x[:]
print(x is y)       # True (same object)
print(x is not z)   # True (different object)

Shallow Copy (x[:]): Creates a new object with the same content but a different memory location.
Direct Assignment (y = x): Makes y reference the same object as x.
