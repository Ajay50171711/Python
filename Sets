
üêç Python Set ‚Äì Complete Notes
1Ô∏è‚É£ Introduction
Definition: A set is an unordered, mutable, and unindexed collection of unique elements.

Key Features:

No duplicate elements.

Elements must be hashable (immutable types like numbers, strings, tuples).

Sets themselves are mutable, but set elements must be immutable.

2Ô∏è‚É£ Creating Sets
# Empty set
s = set()          # ‚úÖ Correct way
s = {}             # ‚ùå Creates a dictionary, not a set

# With elements
numbers = {1, 2, 3}
mixed = {1, 2.5, "hello", (3, 4)}
‚ö†Ô∏è Lists, dicts, and other sets cannot be elements because they are not hashable.

3Ô∏è‚É£ Adding & Removing Elements
Operation	Method/Operator	Example
Add single element	add()	s.add(5)
Add multiple elements	update(iterable)	s.update([6,7], {8,9})
Remove specific element	remove(x) (error if x not found)	s.remove(5)
Remove safely	discard(x) (no error if missing)	s.discard(10)
Remove & return random	pop()	s.pop()
Remove all elements	clear()	s.clear()
4Ô∏è‚É£ Set Operations
Python sets support mathematical set operations:

Operation	Operator	Method	Example
Union	`	`	union()
Intersection	&	intersection()	A & B
Difference	-	difference()	A - B
Symmetric Difference	^	symmetric_difference()	A ^ B
A = {1, 2, 3}
B = {3, 4, 5}

print(A | B)   # {1,2,3,4,5}
print(A & B)   # {3}
print(A - B)   # {1,2}
print(A ^ B)   # {1,2,4,5}
5Ô∏è‚É£ Membership & Iteration
if 2 in A:  
    print("Present")

for item in A:
    print(item)
Sets are unordered, so iteration order is not guaranteed.

6Ô∏è‚É£ Set Comparisons
Operation	Example	Meaning
Subset	A <= B or A.issubset(B)	All elements of A are in B
Proper Subset	A < B	A is subset of B and A != B
Superset	A >= B or A.issuperset(B)	B is subset of A
Proper Superset	A > B	A is superset of B and A != B
Disjoint	A.isdisjoint(B)	True if A and B have no common elements
7Ô∏è‚É£ Built-in Functions
Function	Description	Example
len(s)	Number of elements	len(A)
min(s), max(s)	Minimum/Maximum element (for comparable types)	min({5, 2, 9}) ‚Üí 2
sum(s)	Sum of numeric elements	sum({1,2,3}) ‚Üí 6
sorted(s)	Returns a sorted list	sorted(A)
8Ô∏è‚É£ Frozenset (Immutable Set)
Immutable version of a set.

Hashable ‚Üí can be used as dict keys or elements of another set.

fs = frozenset([1, 2, 3])
# fs.add(4)  # ‚ùå Error
9Ô∏è‚É£ Set Comprehension
Similar to list comprehension but creates a set.

squares = {x**2 for x in range(5)}
print(squares)   # {0, 1, 4, 9, 16}
üîü Practical Tips & Gotchas
Duplicates are automatically removed:
{1, 2, 2, 3} ‚Üí {1, 2, 3}

Unhashable elements:
{[1,2], 3} ‚ùå (lists are mutable)

Sets are faster than lists for membership tests: x in set is O(1) average.

üèÅ Real-life Use Cases
Remove duplicates from a list:

data = [1,2,2,3,1]
unique = set(data)  # {1,2,3}
Common friends in social networks (intersection).

Tagging system where order doesn‚Äôt matter.

Checking unique words in a text.






No file chosenNo file chosen
ChatGPT can make mistakes. Check important info. See Cookie Preferences.
