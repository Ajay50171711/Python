Loops in Python
Loops are used to execute a block of code repeatedly as long as a specific condition is true. Python supports two types of loops: for loops and while loops.

for Loop
The for loop is used for iterating over a sequence (like a list, tuple, string, or range).

# Iterate over a list
fruits = ["apple", "banana", "cherry"]
for fruit in fruits:
    print(fruit)


Using range() with for:
for i in range(5):  # range(5) generates numbers 0 to 4
    print(i

while Loop
The while loop executes as long as a given condition is true.

count = 0
while count < 5:
    print("Count:", count)
    count += 1  # increment the counter


Control Statements
-------------------------
Control statements change the flow of execution in loops or conditionals. Python has three main control statements:

a. break Statement
Stops the loop prematurely when a condition is met.

for num in range(10):
    if num == 5:
        break  # exit the loop when num is 5
    print(num)


b. continue Statement
Skips the current iteration and proceeds to the next.

for num in range(5):
    if num == 2:
        continue  # skip the rest of the code in this iteration
    print(num)


3. Nested Loops
Loops can be nested inside other loops. Be cautious, as this can lead to complex logic

for i in range(1, 4):  # Outer loop (rows)
    for j in range(1, 4):  # Inner loop (columns)
        print(i * j, end=" ")  # Print product of i and j
    print()  # Move to the next line after each row



Practical Example: Combining Loops and Control Statements
Problem: Print all numbers from 1 to 10, but skip multiples of 3


for num in range(1, 11):
    if num % 3 == 0:
        continue  # skip multiples of 3
    print(num)
----------------------------------------------------------------------------------------------------------------------
# Find the largest number in a list
numbers = [15, 22, 8, 19, 31, 45]
largest = numbers[0]
for num in numbers:
    if num > largest:
        largest = num
print("Largest number:", largest)
--------------------------------------
# Multiplication table of 7
for i in range(1, 11):
    print(f"7 x {i} = {7 * i}")
-----------------------------------
# Factorial of 5
n = 5
factorial = 1
for i in range(1, n + 1):
    factorial *= i
print("Factorial of 5:", factorial)
-------------------------------------


